using System;

namespace Binapsis.Plataforma.Estructura
{
    public interface IObjetoDatos
    {
        IObjetoDatos Propietario { get; }
        ITipo Tipo { get; }

        IObjetoDatos CrearObjetoDatos(string ruta);
        IObjetoDatos CrearObjetoDatos(IPropiedad propiedad);
        IObjetoDatos CrearObjetoDatos(int indice);
        void Eliminar();
        void Establecer(string ruta, object valor);
        void Establecer(IPropiedad propiedad, object valor);
        void Establecer(int indice, object valor);
        void EstablecerBoolean(string ruta, bool valor);
        void EstablecerBoolean(IPropiedad propiedad, bool valor);
        void EstablecerBoolean(int indice, bool valor);
        void EstablecerByte(string ruta, byte valor);
        void EstablecerByte(IPropiedad propiedad, byte valor);
        void EstablecerByte(int indice, byte valor);
        void EstablecerChar(string ruta, char valor);
        void EstablecerChar(IPropiedad propiedad, char valor);
        void EstablecerChar(int indice, char valor);
        void EstablecerDateTime(string ruta, DateTime valor);
        void EstablecerDateTime(IPropiedad propiedad, DateTime valor);
        void EstablecerDateTime(int indice, DateTime valor);
        void EstablecerDecimal(string ruta, decimal valor);
        void EstablecerDecimal(IPropiedad propiedad, decimal valor);
        void EstablecerDecimal(int indice, decimal valor);
        void EstablecerDouble(string ruta, double valor);
        void EstablecerDouble(IPropiedad propiedad, double valor);
        void EstablecerDouble(int indice, double valor);
        void EstablecerFloat(string ruta, float valor);
        void EstablecerFloat(IPropiedad propiedad, float valor);
        void EstablecerFloat(int indice, float valor);
        void EstablecerInteger(string ruta, int valor);
        void EstablecerInteger(IPropiedad propiedad, int valor);
        void EstablecerInteger(int indice, int valor);
        void EstablecerLong(string ruta, long valor);
        void EstablecerLong(IPropiedad propiedad, long valor);
        void EstablecerLong(int indice, long valor);
        void EstablecerObject(string ruta, object valor);
        void EstablecerObject(IPropiedad propiedad, object valor);
        void EstablecerObject(int indice, object valor);
        void EstablecerObjetoDatos(string ruta, IObjetoDatos valor);
        void EstablecerObjetoDatos(IPropiedad propiedad, IObjetoDatos valor);
        void EstablecerObjetoDatos(int indice, IObjetoDatos valor);
        void EstablecerSByte(string ruta, sbyte valor);
        void EstablecerSByte(IPropiedad propiedad, sbyte valor);
        void EstablecerSByte(int indice, sbyte valor);
        void EstablecerShort(string ruta, short valor);
        void EstablecerShort(IPropiedad propiedad, short valor);
        void EstablecerShort(int indice, short valor);
        void EstablecerString(string ruta, string valor);
        void EstablecerString(IPropiedad propiedad, string valor);
        void EstablecerString(int indice, string valor);
        void EstablecerUInteger(string ruta, uint valor);
        void EstablecerUInteger(IPropiedad propiedad, uint valor);
        void EstablecerUInteger(int indice, uint valor);
        void EstablecerULong(string ruta, ulong valor);
        void EstablecerULong(IPropiedad propiedad, ulong valor);
        void EstablecerULong(int indice, ulong valor);
        void EstablecerUShort(string ruta, ushort valor);
        void EstablecerUShort(IPropiedad propiedad, ushort valor);
        void EstablecerUShort(int indice, ushort valor);
        bool Establecido(string ruta);
        bool Establecido(IPropiedad propiedad);
        bool Establecido(int indice);
        object Obtener(string ruta);
        object Obtener(IPropiedad propiedad);
        object Obtener(int indice);
        bool ObtenerBoolean(string ruta);
        bool ObtenerBoolean(IPropiedad propiedad);
        bool ObtenerBoolean(int indice);
        byte ObtenerByte(string ruta);
        byte ObtenerByte(IPropiedad propiedad);
        byte ObtenerByte(int indice);
        char ObtenerChar(string ruta);
        char ObtenerChar(IPropiedad propiedad);
        char ObtenerChar(int indice);
        IColeccion ObtenerColeccion(string ruta);
        IColeccion ObtenerColeccion(IPropiedad propiedad);
        IColeccion ObtenerColeccion(int indice);
        DateTime ObtenerDateTime(string ruta);
        DateTime ObtenerDateTime(IPropiedad propiedad);
        DateTime ObtenerDateTime(int indice);
        decimal ObtenerDecimal(string ruta);
        decimal ObtenerDecimal(IPropiedad propiedad);
        decimal ObtenerDecimal(int indice);
        double ObtenerDouble(string ruta);
        double ObtenerDouble(IPropiedad propiedad);
        double ObtenerDouble(int indice);
        float ObtenerFloat(string ruta);
        float ObtenerFloat(IPropiedad propiedad);
        float ObtenerFloat(int indice);
        int ObtenerInteger(string ruta);
        int ObtenerInteger(IPropiedad propiedad);
        int ObtenerInteger(int indice);
        long ObtenerLong(string ruta);
        long ObtenerLong(IPropiedad propiedad);
        long ObtenerLong(int indice);
        object ObtenerObject(string ruta);
        object ObtenerObject(IPropiedad propiedad);
        object ObtenerObject(int indice);
        IObjetoDatos ObtenerObjetoDatos(string ruta);
        IObjetoDatos ObtenerObjetoDatos(IPropiedad propiedad);
        IObjetoDatos ObtenerObjetoDatos(int indice);
        sbyte ObtenerSByte(string ruta);
        sbyte ObtenerSByte(IPropiedad propiedad);
        sbyte ObtenerSByte(int indice);
        short ObtenerShort(string ruta);
        short ObtenerShort(IPropiedad propiedad);
        short ObtenerShort(int indice);
        string ObtenerString(string ruta);
        string ObtenerString(IPropiedad propiedad);
        string ObtenerString(int indice);
        uint ObtenerUInteger(string ruta);
        uint ObtenerUInteger(IPropiedad propiedad);
        uint ObtenerUInteger(int indice);
        ulong ObtenerULong(string ruta);
        ulong ObtenerULong(IPropiedad propiedad);
        ulong ObtenerULong(int indice);
        ushort ObtenerUShort(string ruta);
        ushort ObtenerUShort(IPropiedad propiedad);
        ushort ObtenerUShort(int indice);
        void RemoverObjetoDatos(string nombre, IObjetoDatos item);
        void RemoverObjetoDatos(IPropiedad propiedad, IObjetoDatos item);
        void RemoverObjetoDatos(int indice, IObjetoDatos item);
    }
}